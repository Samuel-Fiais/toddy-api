generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")  
}

model Supplier {
  id          String    @id @default(uuid()) @db.VarChar(36)
  alternateId Int       @unique @db.Integer
  createdAt   DateTime  @default(now()) @db.Date
  document    String    @unique @db.VarChar(14)
  tradeName   String    @db.VarChar(255)
  companyName String    @db.VarChar(255)
  phone       String    @db.VarChar(11)
  email       String    @db.VarChar(36)
  products    Product[]
  orders      Order[]

  @@map("suppliers")
}

model Product {
  id          String      @id @default(uuid()) @db.VarChar(36)
  alternateId Int         @unique @db.Integer
  createdAt   DateTime    @default(now()) @db.Date
  description String      @db.VarChar(255)
  price       Decimal     @default(0) @db.Money
  isBulk      Boolean     @default(false)
  conversion  Int?        @db.Integer
  supplierId  String      @db.VarChar(36)
  supplier    Supplier    @relation(fields: [supplierId], references: [id])
  inventory   Inventory?
  orderItens  OrderItem[]

  @@map("products")
}

model Inventory {
  id          String   @id @default(uuid()) @db.VarChar(36)
  alternateId Int      @unique @db.Integer
  createdAt   DateTime @default(now()) @db.Date
  quantity    Int      @default(0) @db.Integer
  productId   String   @unique @db.VarChar(36)
  product     Product  @relation(fields: [productId], references: [id])

  @@map("inventories")
}

model OrderItem {
  id          String   @id @default(uuid()) @db.VarChar(36)
  alternateId Int      @unique @db.Integer
  createdAt   DateTime @default(now()) @db.Date
  quantity    Int      @db.Integer
  totalValue  Decimal  @db.Money
  productId   String   @db.VarChar(36)
  product     Product  @relation(fields: [productId], references: [id])
  orderId     String   @db.VarChar(36)
  order       Order    @relation(fields: [orderId], references: [id])

  @@map("order_items")
}

model Order {
  id          String      @id @default(uuid()) @db.VarChar(36)
  alternateId Int         @unique @db.Integer
  createdAt   DateTime    @default(now()) @db.Date
  quantity    Int         @db.Integer
  totalValue  Decimal     @db.Money
  arrivalData DateTime    @db.Date
  supplierId  String      @db.VarChar(36)
  supplier    Supplier    @relation(fields: [supplierId], references: [id])
  orderItens  OrderItem[]

  @@map("orders")
}

model SaleItem {
  id           String     @id @default(uuid()) @db.VarChar(36)
  alternateId  Int        @unique @db.Integer
  createdAt    DateTime   @default(now()) @db.Date
  quantity     Int        @db.Integer
  totalValue   Decimal    @db.Money
  totalSalesId String     @db.VarChar(36)
  totalSales   Sale @relation(fields: [totalSalesId], references: [id])

  @@map("sale-items")
}

model Sale {
  id           String   @id @default(uuid()) @db.VarChar(36)
  alternateId  Int      @unique @db.Integer
  createdAt    DateTime @default(now()) @db.Date
  quantity     Int      @db.Integer
  totalValue   Decimal  @db.Money
  cardDiscount Decimal  @db.Money
  paymentId    String   @db.VarChar(36)
  payment      PaymentType? @relation(fields: [paymentId], references: [id])
  sales        SaleItem[]

  @@map("sales")
}

model PaymentType {
  id          String   @id @default(uuid()) @db.VarChar(36)
  alternateId Int      @unique @db.Integer
  createdAt   DateTime @default(now()) @db.Date
  description String   @db.VarChar(255)
  totalSales  Sale[]

  @@map("payment_types")
}
